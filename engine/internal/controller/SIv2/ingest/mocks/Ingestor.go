// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import ingest "github.com/veritone/edge-stream-ingestor/ingest"
import mock "github.com/stretchr/testify/mock"
import streamio "github.com/veritone/edge-stream-ingestor/streamio"
import time "time"

// Ingestor is an autogenerated mock type for the Ingestor type
type Ingestor struct {
	mock.Mock
}

// AssetCounts provides a mock function with given fields:
func (_m *Ingestor) AssetCounts() map[string]int {
	ret := _m.Called()

	var r0 map[string]int
	if rf, ok := ret.Get(0).(func() map[string]int); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]int)
		}
	}

	return r0
}

// BytesWritten provides a mock function with given fields:
func (_m *Ingestor) BytesWritten() int64 {
	ret := _m.Called()

	var r0 int64
	if rf, ok := ret.Get(0).(func() int64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// DurationIngested provides a mock function with given fields:
func (_m *Ingestor) DurationIngested() time.Duration {
	ret := _m.Called()

	var r0 time.Duration
	if rf, ok := ret.Get(0).(func() time.Duration); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Duration)
	}

	return r0
}

// Object provides a mock function with given fields:
func (_m *Ingestor) Object() *ingest.Object {
	ret := _m.Called()

	var r0 *ingest.Object
	if rf, ok := ret.Get(0).(func() *ingest.Object); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ingest.Object)
		}
	}

	return r0
}

// WriteStream provides a mock function with given fields: _a0, _a1
func (_m *Ingestor) WriteStream(_a0 context.Context, _a1 *streamio.Stream) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *streamio.Stream) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
